// <% if(Emessage !=''){ %>
//   <div class="alert alert-warning alert-dismissible fade show" role="alert">
//     <%= Emessage %>
//     <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
//   </div>
//   <% } %> 




----------------------------------search ----------------------------------------
var str = {
        stringPart:req.body.typeahead
    }

    db.query('SELECT songTitle FROM song WHERE songTitle LIKE "%'+str.stringPart+'%"',function(err, rows, fields) {
        if (err) throw err;
        var data=[];
        for(i=0;i<rows.length;i++)
        {
            data.push(rows[i].songTitle);
        }
        res.send(JSON.stringify(data));
    });


$(document).ready(function(){
$('input.typeahead').typeahead({
name: 'typeahead',
remote: 'http://localhost:3000/search_student?key=%QUERY',
limit: 10
});
});


---------------------------------------------  pagination ----------------------------------
// app.get('/', (req, res) => {
//   let sql = 'SELECT * FROM photos';
//   db.query(sql, (err, result) => {
//       if(err) throw err;
//       const numOfResults = result.length;
//       const numberOfPages = Math.ceil(numOfResults / resultsPerPage);
//       let page = req.query.page ? Number(req.query.page) : 1;
//       if(page > numberOfPages){
//           res.redirect('/?page='+encodeURIComponent(numberOfPages));
//       }else if(page < 1){
//           res.redirect('/?page='+encodeURIComponent('1'));
//       }
//       //Determine the SQL LIMIT starting number
//       const startingLimit = (page - 1) * resultsPerPage;
//       //Get the relevant number of POSTS for this starting page
//       sql = `SELECT * FROM photos LIMIT ${startingLimit},${resultsPerPage}`;
//       db.query(sql, (err, result)=>{
//           if(err) throw err;
//           let iterator = (page - 5) < 1 ? 1 : page - 5;
//           let endingLink = (iterator + 9) <= numberOfPages ? (iterator + 9) : page + (numberOfPages - page);
//           if(endingLink < (page + 4)){
//               iterator -= (page + 4) - numberOfPages;
//           }
//           res.render('index', {data: result, page, iterator, endingLink, numberOfPages});
//       });
//   });
// });



------------------------------------------ HTML To PDF _--------------------------------------------------
let options = { format: 'A4' };
// Example of options with args //
// let options = { format: 'A4',name: 'example.pdf', args: ['--no-sandbox', '--disable-setuid-sandbox'] };

let file = { content: "<h1>Welcome to html-pdf-node</h1>" };
// or //
let file = { url: "https://example.com" };
html_to_pdf.generatePdf(file, options).then(pdfBuffer => {
  console.log("PDF Buffer:-", pdfBuffer);
});